{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\ReactModelPro\\\\demo-todo-list\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Head from './component/Head';\nimport List from './component/List';\nimport Footer from './component/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this._removeTodoWithId = todoId => {\n      const tempTodos = this.state.todos;\n      let checkedCount = 0;\n      tempTodos.forEach((todo, index) => {\n        if (todo.id === todoId) {\n          tempTodos.splice(index, 1);\n        }\n      });\n      // 处理选中\n      tempTodos.forEach((todo, index) => {\n        if (todo.finished) {\n          checkedCount += 1;\n        }\n      });\n      this.setState({\n        todos: tempTodos\n      });\n    };\n    this.state = {\n      todos: [{\n        id: 1,\n        title: '看书一小时',\n        finished: false\n      }, {\n        id: 2,\n        title: '跑步40分钟',\n        finished: false\n      }, {\n        id: 3,\n        title: '完成React学习',\n        finished: false\n      }, {\n        id: 4,\n        title: '给兰花浇水',\n        finished: false\n      }],\n      finishContent: []\n    };\n  }\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos,\n          removeTodo: this._removeTodoWithId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Head","List","Footer","jsxDEV","_jsxDEV","App","constructor","props","_removeTodoWithId","todoId","tempTodos","state","todos","checkedCount","forEach","todo","index","id","splice","finished","setState","title","finishContent","render","class","children","fileName","_jsxFileName","lineNumber","columnNumber","removeTodo"],"sources":["D:/React/ReactModelPro/demo-todo-list/src/App.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport Head from './component/Head'\nimport List from './component/List'\nimport Footer from './component/Footer'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            todos:[\n                {id:1, title:'看书一小时', finished:false},\n                {id:2, title:'跑步40分钟', finished:false},\n                {id:3, title:'完成React学习', finished:false},\n                {id:4, title:'给兰花浇水', finished:false}\n            ],\n            finishContent:[]\n        }\n    }\n    render() {\n        const {todos} = this.state;\n        return (\n            <div class=\"todo-container\">\n                <div class=\"todo-wrap\">\n                    {/*头部*/}\n                    <Head/>\n                    {/*列表*/}\n                    <List\n                        todos={todos}\n                        removeTodo={this._removeTodoWithId}\n                    />\n                    {/*尾部*/}\n                    <Footer/>\n                </div>\n            </div>\n        );\n    }\n\n    _removeTodoWithId = (todoId)=>{\n        const tempTodos = this.state.todos;\n        let checkedCount = 0;\n        tempTodos.forEach((todo,index)=>{\n            if (todo.id === todoId){\n                tempTodos.splice(index,1);\n            }\n        });\n        // 处理选中\n        tempTodos.forEach((todo,index)=>{\n            if(todo.finished){\n                checkedCount+=1;\n            }\n        });\n        this.setState({\n            todos:tempTodos\n        })\n    }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,MAAM,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,SAASN,SAAS,CAAC;EACxBO,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KA+BjBC,iBAAiB,GAAIC,MAAM,IAAG;MAC1B,MAAMC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK;MAClC,IAAIC,YAAY,GAAG,CAAC;MACpBH,SAAS,CAACI,OAAO,CAAC,CAACC,IAAI,EAACC,KAAK,KAAG;QAC5B,IAAID,IAAI,CAACE,EAAE,KAAKR,MAAM,EAAC;UACnBC,SAAS,CAACQ,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;QAC7B;MACJ,CAAC,CAAC;MACF;MACAN,SAAS,CAACI,OAAO,CAAC,CAACC,IAAI,EAACC,KAAK,KAAG;QAC5B,IAAGD,IAAI,CAACI,QAAQ,EAAC;UACbN,YAAY,IAAE,CAAC;QACnB;MACJ,CAAC,CAAC;MACF,IAAI,CAACO,QAAQ,CAAC;QACVR,KAAK,EAACF;MACV,CAAC,CAAC;IACN,CAAC;IA9CG,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAC,CACF;QAACK,EAAE,EAAC,CAAC;QAAEI,KAAK,EAAC,OAAO;QAAEF,QAAQ,EAAC;MAAK,CAAC,EACrC;QAACF,EAAE,EAAC,CAAC;QAAEI,KAAK,EAAC,QAAQ;QAAEF,QAAQ,EAAC;MAAK,CAAC,EACtC;QAACF,EAAE,EAAC,CAAC;QAAEI,KAAK,EAAC,WAAW;QAAEF,QAAQ,EAAC;MAAK,CAAC,EACzC;QAACF,EAAE,EAAC,CAAC;QAAEI,KAAK,EAAC,OAAO;QAAEF,QAAQ,EAAC;MAAK,CAAC,CACxC;MACDG,aAAa,EAAC;IAClB,CAAC;EACL;EACAC,MAAMA,CAAA,EAAG;IACL,MAAM;MAACX;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAC1B,oBACIP,OAAA;MAAKoB,KAAK,EAAC,gBAAgB;MAAAC,QAAA,eACvBrB,OAAA;QAAKoB,KAAK,EAAC,WAAW;QAAAC,QAAA,gBAElBrB,OAAA,CAACJ,IAAI;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAEPzB,OAAA,CAACH,IAAI;UACDW,KAAK,EAAEA,KAAM;UACbkB,UAAU,EAAE,IAAI,CAACtB;QAAkB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eAEFzB,OAAA,CAACF,MAAM;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AAoBJ;AAEA,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}